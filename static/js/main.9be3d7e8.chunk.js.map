{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","regEx","NewMovie","state","errorMessages","titleError","imdbUrlError","imgUrlError","imdbIdError","changeHandler","e","target","name","value","setState","onSubmit","preventDefault","newMovie","props","onAdd","validateField","event","match","this","type","placeholder","onChange","required","onBlur","PureComponent","App","moviesFromServer","addMovie","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9be3d7e8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\n// eslint-disable-next-line max-len\nconst regEx = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends PureComponent {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    errorMessages: {\n      title: 'Write here title',\n      imdbUrl: 'Write here correct URL',\n      imgUrl: 'Write here correct Image Url ',\n      imdbId: 'Put here correct ID',\n    },\n    titleError: false,\n    imdbUrlError: false,\n    imgUrlError: false,\n    imdbIdError: false,\n  };\n\n  changeHandler = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const {\n      title,\n      imdbId,\n      imgUrl,\n      imdbUrl,\n      description,\n      titleError,\n      imgUrlError,\n      imdbUrlError,\n      imdbIdError,\n    }\n    = this.state;\n\n    if (titleError || imdbIdError || imdbUrlError || imgUrlError) {\n      return;\n    }\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.props.onAdd(newMovie);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  validateField = (event) => {\n    const { name, value } = event.target;\n    let { titleError, imgUrlError, imdbUrlError, imdbIdError } = this.state;\n\n    switch (name) {\n      case 'title':\n        titleError = !value;\n        break;\n      case 'imgUrl':\n        imgUrlError = !value.match(regEx);\n        break;\n      case 'imdbUrl':\n        imdbUrlError = !value.match(regEx);\n        break;\n      case 'imdbId':\n        imdbIdError = !value;\n        break;\n      default:\n        break;\n    }\n\n    this.setState({\n      titleError,\n      imgUrlError,\n      imdbUrlError,\n      imdbIdError,\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      errorMessages,\n      titleError,\n      imdbIdError,\n      imgUrlError,\n      imdbUrlError,\n    }\n    = this.state;\n\n    return (\n      <form\n        onSubmit={this.onSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\">\n            Title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"title\"\n                className={`input ${titleError && 'is-danger'}`}\n                value={title}\n                onChange={this.changeHandler}\n                required\n                onBlur={this.validateField}\n              />\n\n              {titleError && (\n                <p className=\"has-text-danger\">{errorMessages.title}</p>\n              )}\n            </div>\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\">\n            Description\n            <div className=\"control\">\n              <textarea\n                className=\"textarea\"\n                placeholder=\"description\"\n                name=\"description\"\n                value={description}\n                onChange={this.changeHandler}\n              />\n            </div>\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\">\n            Image Url\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                className={`input ${imgUrlError && 'is-danger'}`}\n                placeholder=\"imgUrl\"\n                name=\"imgUrl\"\n                value={imgUrl}\n                onChange={this.changeHandler}\n                required\n                onBlur={this.validateField}\n              />\n\n              {imgUrlError && (\n                <p className=\"has-text-danger\">{errorMessages.imgUrl}</p>\n              )}\n            </div>\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\">\n            Imdb Url\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                className={`input ${imdbUrlError && 'is-danger'}`}\n                placeholder=\"imdbUrl\"\n                name=\"imdbUrl\"\n                value={imdbUrl}\n                onChange={this.changeHandler}\n                required\n                onBlur={this.validateField}\n              />\n\n              {imdbUrlError && (\n                <p className=\"has-text-danger\">{errorMessages.imdbUrl}</p>\n              )}\n            </div>\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\">\n            Imdb ID\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                className={`input ${imdbIdError && 'is-danger'}`}\n                placeholder=\"imdbId\"\n                name=\"imdbId\"\n                value={imdbId}\n                onChange={this.changeHandler}\n                required\n                onBlur={this.validateField}\n              />\n\n              {imdbIdError && (\n                <p className=\"has-text-danger\">{errorMessages.imdbId}</p>\n              )}\n            </div>\n          </label>\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"button is-success\"\n        >\n          Add This Movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, { ...movie }],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}